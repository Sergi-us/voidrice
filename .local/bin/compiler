#!/bin/sh

# Dieses Skript kompiliert oder führt eine abschließende Operation an einem Dokument durch.
# Ich lasse dieses Skript über vim ausführen.

# Kompiliert .tex, groff (.mom, .ms), .rmd, .md, .org. Öffnet .sent Dateien als sent-Präsentationen.
# Führt Skripte basierend auf der Dateierweiterung oder dem Shebang aus.

# Beachte, dass .tex-Dateien, die du mit XeLaTeX kompilieren möchtest, die Zeichenkette "xelatex"
# irgendwo in einem Kommentar/Befehl in den ersten 5 Zeilen enthalten sollten.

file="${1}"
ext="${file##*.}"
dir=${file%/*}
base="${file%.*}"

cd "${dir}" || exit "1"

case "${ext}" in
    [0-9]) preconv "${file}" | refer -PS -e | groff -mandoc -T pdf > "${base}.pdf" ;;
    mom|ms) preconv "${file}" | refer -PS -e | groff -T pdf -m"${ext}" > "${base}.pdf" ;;
    c) cc "${file}" -o "${base}" && "./${base}" ;;
    cpp) g++ "${file}" -o "${base}" && "./${base}" ;;
    cs) mcs "${file}" && mono "${base}.exe" ;;
    go) go run "${file}" ;;
    h) sudo make install ;;
    java) javac -d classes "${file}" && java -cp classes "${base}" ;;
    m) octave "${file}" ;;
    md) [ -x "$(command -v lowdown)" ] && \
        lowdown --parse-no-intraemph "${file}" -Tms | groff -mpdfmark -ms -kept -T pdf > "${base}.pdf" || \
        [ -x "$(command -v groffdown)" ] && \
        groffdown -i "${file}" | groff -T pdf > "${base}.pdf" || \
        pandoc -t ms --highlight-style="kate" -s -o "${base}.pdf" "${file}" ;;
    org) emacs "${file}" --batch -u "${USER}" -f org-latex-export-to-pdf ;;
    py) python "${file}" ;;
    [rR]md) Rscript -e "rmarkdown::render('${file}', quiet=TRUE)" ;;
    rs) cargo build ;;
    sass) sassc -a "${file}" "${base}.css" ;;
    scad) openscad -o "${base}.stl" "${file}" ;;
    sent) setsid -f sent "${file}" 2> "/dev/null" ;;
    tex)
        textarget="$(getcomproot "${file}" || echo "${file}")"
        command="pdflatex"
        head -n5 "${textarget}" | grep -qi "xelatex" && command="xelatex"
        ${command} --output-directory="${textarget%/*}" "${textarget%.*}" &&
        grep -qi addbibresource "${textarget}" &&
        biber --input-directory "${textarget%/*}" "${textarget%.*}" &&
        ${command} --output-directory="${textarget%/*}" "${textarget%.*}" &&
        ${command} --output-directory="${textarget%/*}" "${textarget%.*}"
        ;;
    *) sed -n '/^#!/s/^#!//p; q' "${file}" | xargs -r -I % "${file}" ;;
esac
