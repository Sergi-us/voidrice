#!/bin/bash
# 13.11.2024

# Konfigurationsvariablen
VIDEO_OUTPUT_DIR="$HOME/Videos/scr"
AUDIO_OUTPUT_DIR="$HOME/Musik"
FRAMERATE=30
OUTPUT_FRAMERATE=30
CRF=23
PRESET="medium"
AUDIO_CODEC="aac"
AUDIO_BITRATE="128k"
OUTPUT_FORMAT="mp4"
VIDEO_CODEC="libx264"  # Standard-Codec, wird später ggf. auf VAAPI umgestellt

# Icon-Aktualisierung
updateicon() {
    echo "$1" > /tmp/recordingicon
    pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

# Aufnahme beenden
killrecording() {
    if [ -f /tmp/recordingpid ]; then
        local pid=$(cat /tmp/recordingpid)
        kill -SIGTERM "$pid" 2>/dev/null
        local count=0
        while kill -0 "$pid" 2>/dev/null && [ $count -lt 5 ]; do
            sleep 1
            ((count++))
        done
        if kill -0 "$pid" 2>/dev/null; then
            kill -9 "$pid" 2>/dev/null
        fi
        rm -f /tmp/recordingpid
    fi
    updateicon ""
}

# Funktion zum Auswählen eines Monitors
select_monitor() {
    monitors=$(xrandr --listmonitors | tail -n +2 | awk '{print $4}')
    selected_monitor=$(echo "$monitors" | dmenu -i -p "Monitor auswählen:")
    if [ -z "$selected_monitor" ]; then
        echo "Kein Monitor ausgewählt."
        exit 1
    fi
    monitor_info=$(xrandr --query | grep -A1 "^$selected_monitor connected")
    resolution=$(echo "$monitor_info" | grep -oP '\d+x\d+' | head -n1)
    offset=$(echo "$monitor_info" | grep -oP '(?<=\+)\d+\+\d+' | head -n1)
    if [ -n "$offset" ]; then
        offset="+$offset"
    else
        offset="+0+0"
    fi
}

# Bildschirmaufnahme (ganzer Bildschirm)
screencast() {
    # Versuche die Bildschirmauflösung über xrandr zu bekommen
    resolution=$(xrandr --current | grep '*' | uniq | awk '{print $1}')

    # Wenn keine Auflösung gefunden wurde, versuche es mit einer alternativen Methode
    if [ -z "$resolution" ]; then
        resolution=$(xrandr | grep ' connected' | grep -o '[0-9]*x[0-9]*' | head -n 1)
    fi

    # Überprüfe ob wir eine Auflösung haben
    if [ -z "$resolution" ]; then
        echo "Fehler: Konnte Bildschirmauflösung nicht ermitteln"
        exit 1
    fi

    # Debug-Ausgabe
    echo "Erkannte Auflösung: $resolution"

    local output_file="${VIDEO_OUTPUT_DIR}/screencast-$(date '+%y%m%d-%H%M-%S').${OUTPUT_FORMAT}"

    # Erstelle Ausgabeverzeichnis falls es nicht existiert
    mkdir -p "$VIDEO_OUTPUT_DIR"

    ffmpeg -y \
        -f x11grab -framerate $FRAMERATE -video_size "$resolution" -i $DISPLAY \
        -f pulse -channels 2 -i default \
        -c:v $VIDEO_CODEC -crf $CRF -preset $PRESET \
        -c:a $AUDIO_CODEC -b:a $AUDIO_BITRATE \
        -pix_fmt yuv420p \
        "$output_file" &

    echo $! > /tmp/recordingpid
    updateicon "󰻃󰍮"
}

# Bildschirmaufnahme (ausgewählten Monitor aufnehmen)
screencast_monitor() {
    select_monitor
    if [ -z "$resolution" ]; then
        echo "Fehler: Konnte Monitor-Auflösung nicht ermitteln"
        exit 1
    fi

    local output_file="${VIDEO_OUTPUT_DIR}/screencast-${selected_monitor}-$(date '+%y%m%d-%H%M-%S').${OUTPUT_FORMAT}"

    # Erstelle Ausgabeverzeichnis falls es nicht existiert
    mkdir -p "$VIDEO_OUTPUT_DIR"

    ffmpeg -y \
        -f x11grab -framerate $FRAMERATE -video_size "$resolution" -i "$DISPLAY$offset" \
        -f pulse -channels 2 -i default \
        -c:v $VIDEO_CODEC -crf $CRF -preset $PRESET \
        -c:a $AUDIO_CODEC -b:a $AUDIO_BITRATE \
        -pix_fmt yuv420p \
        "$output_file" &

    echo $! > /tmp/recordingpid
    updateicon "󰻃󰍮"
}

# Audio-Aufnahme
audio() {
    mkdir -p "$AUDIO_OUTPUT_DIR"
    local output_file="${AUDIO_OUTPUT_DIR}/audio-$(date '+%y%m%d-%H%M-%S').flac"
    ffmpeg -f pulse -i default -c:a flac "$output_file" &
    echo $! > /tmp/recordingpid
    updateicon "󰍮"
}

# Webcam-Aufnahme
webcam() {
    mkdir -p "$VIDEO_OUTPUT_DIR"
    local output_file="${VIDEO_OUTPUT_DIR}/webcam-$(date '+%y%m%d-%H%M-%S').${OUTPUT_FORMAT}"
    ffmpeg -y \
        -f v4l2 -i "/dev/video0" \
        -c:v $VIDEO_CODEC -crf $CRF -preset $PRESET \
        -pix_fmt yuv420p \
        "$output_file" &
    echo $! > /tmp/recordingpid
    updateicon "󰍮"
}

# Aufnahmeart wählen
askrecording() {
    choice=$(printf "Bildschirmaufnahme\\nBildschirmaufnahme (Monitor auswählen)\\nAudio\\nWebcam" | dmenu -i -p "Aufnahmestil auswählen:")
    case "$choice" in
        Bildschirmaufnahme) screencast ;;
        "Bildschirmaufnahme (Monitor auswählen)") screencast_monitor ;;
        Audio) audio ;;
        Webcam) webcam ;;
    esac
}

# Aufnahme beenden
asktoend() {
    response=$(printf "Nein\\nJa" | dmenu -i -p "Aufnahme läuft, beenden?")
    [ "$response" = "Ja" ] && killrecording
}

# Hauptprogramm
case "$1" in
    screencast) screencast ;;
    screencast_monitor) screencast_monitor ;;
    audio) audio ;;
    webcam) webcam ;;
    kill) killrecording ;;
    *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
