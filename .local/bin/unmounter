#!/bin/sh
# Testversion von Claude
# Skript zum Aush√§ngen von USB-Laufwerken und Android-Telefonen
# Unterst√ºtzt auch das Aush√§ngen von LUKS-verschl√ºsselten Laufwerken
# Fehler bei fehlenden Abh√§ngigkeiten werden abgefangen

set -eu

# √úberpr√ºfen der notwendigen Programme
check_dependencies() {
    for cmd in lsof dmenu lsblk cryptsetup notify-send; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            echo "Fehler: $cmd ist nicht installiert" >&2
            exit 1
        fi
    done
}

# √úberpr√ºfen und Beenden von Prozessen, die das Zielverzeichnis verwenden
kill_processes_using_directory() {
    directory=$1
    if ! process_list=$(lsof +D "$directory" 2>/dev/null | awk 'NR>1 {print $2}'); then
        echo "Warnung: Konnte Prozesse nicht auflisten" >&2
        return 1
    fi

    if [ -n "$process_list" ]; then
        echo "Folgende Prozesse verwenden $directory und werden beendet:" >&2
        echo "$process_list" >&2
        if ! echo "$process_list" | xargs -r sudo kill -9; then
            echo "Warnung: Einige Prozesse konnten nicht beendet werden" >&2
            return 1
        fi
        echo "Prozesse beendet." >&2
    else
        echo "Keine Prozesse verwenden $directory." >&2
    fi
}

main() {
    check_dependencies

    # MTP-Ger√§te finden
    mounteddroids=$(grep simple-mtpfs /etc/mtab 2>/dev/null | awk '{print "üì±" $2}') || true

    # Gemountete Laufwerke finden
    lsblkoutput=$(lsblk -nrpo "name,type,size,mountpoint")
    mounteddrives=$(echo "$lsblkoutput" | awk '
        ($2=="part" || $2=="crypt") &&
        $4!~/\/boot|\/home$|SWAP/ &&
        length($4)>1 {
            printf "üíæ%s (%s)\n",$4,$3
        }
    ')

    # Liste aller unmountbaren Ger√§te erstellen
    allunmountable=$(printf '%s\n%s' "$mounteddroids" "$mounteddrives" | sed '/^$/d;s/ *$//')

    # Pr√ºfen ob √ºberhaupt Ger√§te verf√ºgbar sind
    if [ -z "$allunmountable" ]; then
        notify-send "Keine Ger√§te" "Keine auswerfbaren Ger√§te gefunden."
        exit 0
    fi

    # Ger√§t ausw√§hlen
    chosen=$(echo "$allunmountable" | dmenu -i -p "Welches Laufwerk aush√§ngen?")
    if [ -z "$chosen" ]; then
        exit 0
    fi

    # Mountpoint extrahieren
    mountpoint="/${chosen#*/}"
    mountpoint=${mountpoint%% *}

    # Prozesse beenden und unmounten
    if ! kill_processes_using_directory "$mountpoint"; then
        notify-send "Warnung" "Einige Prozesse konnten nicht beendet werden"
    fi

    if ! sudo -A umount -l "$mountpoint"; then
        notify-send "Fehler" "Konnte $chosen nicht aush√§ngen"
        exit 1
    fi

    notify-send "Ger√§t ausgeh√§ngt" "$chosen wurde ausgeh√§ngt"

    # LUKS-Verschl√ºsselung schlie√üen falls vorhanden
    cryptid=$(echo "$lsblkoutput" | grep "/${chosen#*/}$")
    cryptid="${cryptid%% *}"

    if [ -b "/dev/mapper/${cryptid##*/}" ]; then
        if ! sudo -A cryptsetup close "$cryptid"; then
            notify-send "Fehler" "Konnte Verschl√ºsselung nicht schlie√üen"
            exit 1
        fi
        notify-send "üîíGer√§teverschl√ºsselung geschlossen" "Laufwerk ist jetzt wieder sicher verschlossen"
    fi
}

main "$@"
